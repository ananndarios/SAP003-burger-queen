{"version":3,"sources":["components/Input.js","components/Button.js","utils/firebaseconfig.js","components/Menu.js","components/Breakfast.js","components/FullDay.js","components/Resumo.js","pages/Atendimento.js","pages/Cozinha.js","components/Nav.js","pages/Delivery.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","className","class","id","value","type","placeholder","onChange","Button","onClick","e","preventDefault","children","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","timestampsInSnapshots","firestore","Menu","name","price","count","Breakfast","menu","map","item","breakfast","key","img","FullDay","ResumeItem","Atendimento","useState","setMenu","client","setClient","table","setTable","pedidos","setPedidos","total","setTotal","useEffect","collection","get","then","snapshot","forEach","doc","currentState","data","items","addItem","includes","event","target","orders","index","indexOf","splice","updateTotal","deleteItem","reduce","acc","curr","length","add","parseInt","timeSend","Date","timeDateS","getDate","timeHourS","getHours","timeMinS","getMinutes","timeSecS","getSeconds","status","alert","Cozinha","orderBy","onSnapshot","snap","list","docs","products","clasName","disabled","meetSelect","update","timeDone","timeDateD","timeHourD","timeMinD","timeSecD","confirmOrders","Nav","data-toggle","data-target","href","Delivery","delivery","setDelivery","resumo","itens","timeConclud","timeHourC","timeMinC","timeSecC","finish","seconds","rest","horas","Math","floor","minutos","ceil","time","App","document","title","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47b13c9f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = (props) => {\n    \n    return (\n        <>\n            \n            <input className={props.class}  id={props.id} value={props.value} type={props.type} placeholder={props.placeholder} onChange={props.onChange}></input>\n        </>\n    );\n};\nexport default Input;","import React from 'react';\nimport '../css/bootstrap.css';\n\n\nconst Button = (props) => {\n    function handleButton (event){\n        event.preventDefault()\n        props.onClick()\n    };\n\n    return(\n        <button className={props.class} onClick={(e) => handleButton(e)} >{props.children}</button>\n\n    );\n};\n\nexport default Button;","import firebase from 'firebase';\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAu7gKupAbbgGJdGYCmLcxcbQLAnwqNPco\",\n  authDomain: \"burguer-queen-cc644.firebaseapp.com\",\n  databaseURL: \"https://burger-queen-cc644.firebaseio.com\",\n  projectId: \"burger-queen-cc644\",\n  storageBucket: \"burger-queen-cc644.appspot.com\",\n  messagingSenderId: \"58159857754\",\n  appId: \"1:58159857754:web:4d5757738b46aab7d91863\",\n  measurementId: \"G-WTT4FE6NYY\",\n  timestampsInSnapshots: true\n};\n\nlet firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import React from 'react';\nimport Button from './Button';\nimport '../css/bootstrap.css';\nimport '../css/font-awesome.css'; \n\nconst Menu = (props) => {\n\n    return (\n\n        <div className=\"col-xs-12\">\n            <Button className='btn btn-primary' onClick={props.onClick}> \n                <span className='menu-name'> {props.name}</span>\n                <span className='menu-price'> R$ {props.price}</span>\n                {\n                    props.count\n                        ? <span className='menu-price'> Quantidade: {props.count}</span>\n                        : null\n                }</Button>\n        </div>\n    );\n}\n\nexport default Menu;","import React from 'react';\nimport Menu from './Menu';\nimport '../css/bootstrap.css';\nimport '../css/font-awesome.css';\n\nconst Breakfast = (props) => {\n\n    return (\n        <>\n            <section className=\"col-xs-12\">\n                <h3>  Café da Manhã </h3>\n                <span className=\"btn-group\">\n                    {props.menu.map((item) => item.breakfast === true ? <Menu name={item.name} price={item.price} key={item.id} img={item.img} onClick={() => props.onClick(item)} /> : false)}\n                </span>\n            </section>\n        </>\n    );\n}\n\nexport default Breakfast;\n","import React from 'react';\nimport Menu from './Menu';\nimport '../css/bootstrap.css';\nimport '../css/font-awesome.css';\n\nfunction FullDay(props) {\n    return (\n        <>\n        \n            <section className=\"col-xs-12\">\n                <h3>  Menu Almoço e Janta </h3>\n                <div>\n                    <legend>Hamburgers</legend>\n                    <span className=\"btn-group\">\n                        {props.menu.map((item) => item.type === \"hamburger\" ? <Menu name={item.name} price={item.price} key={item.id} onClick={() => props.onClick(item)} /> : false)}\n                    </span>\n                </div>\n                <div>\n                <legend>Acompanhamentos</legend>\n                    <span className=\"btn-group\">\n                        {props.menu.map((item) => item.type === \"sidedish\" ? <Menu name={item.name} price={item.price} key={item.id} onClick={() => props.onClick(item)} /> : false)}\n                    </span>\n                </div>\n                <div>\n                <legend>Bebidas</legend>\n                    <span className=\"btn-group\">\n                        {props.menu.map((item) => item.type === \"beverage\" ? <Menu name={item.name} price={item.price} key={item.id} onClick={() => props.onClick(item)} /> : false)}\n                    </span>\n                </div>\n                <div>\n                <legend>Adicionais</legend>\n                    <span className=\"btn-group\">\n                        {props.menu.map((item) => item.type === \"additional\" ? <Menu name={item.name} price={item.price} key={item.id} onClick={() => props.onClick(item)} /> : false)}\n                    </span>\n                </div>\n                <div>\n                <legend>Carnes</legend>\n                    <span className=\"btn-group\">\n                        {props.menu.map((item) => item.type === \"beef\" ? <Menu name={item.name} key={item.id} onClick={() => props.onClick(item)} /> : false)}\n                    </span>\n                </div>\n            </section>\n            \n        </>\n    );\n}\n\nexport default FullDay;","import React from 'react';\nimport Button from './Button';\n\nconst ResumeItem = (props) => {\n    return (\n        <>\n            <div className=\"resume-item\">\n                <span className=\"text-muted\"> {props.name} </span>\n                <span className=\"text-muted\"> R$ {props.price}</span>\n                {\n                    props.count\n                        ? <span className=\"text-muted\"> Quantidade: {props.count}</span>\n                        : null\n                }\n                <Button className=\"btn btn-muted\" onClick={props.onClick}>  Delete </Button>\n            </div>\n\n        </>\n    )\n}\n\nexport default ResumeItem;","import React, { useEffect, useState } from 'react';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport db from '../utils/firebaseconfig';\nimport Breakfast from '../components/Breakfast';\nimport FullDay from '../components/FullDay';\nimport '../css/bootstrap.css';\nimport '../css/font-awesome.css';\nimport ResumeItem from '../components/Resumo';\n\n\nfunction Atendimento() {\n\n  const [menu, setMenu] = useState([]);\n  const [client, setClient] = useState('');\n  const [table, setTable] = useState('');\n  const [pedidos, setPedidos] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n\n    db.collection('menu').get()\n      .then((snapshot => {\n        snapshot.forEach(doc =>\n          setMenu((currentState) => [...currentState, doc.data()]));\n\n      }));\n\n  }, []);\n\n  const sendRequest = () => {\n    \n    if (pedidos.length && table && client) {\n      db.collection('pedidos').add({\n        pedidos,\n        total,\n        client,\n        table: parseInt(table),\n        timeSend: new Date(),\n        timeDateS: new Date().getDate(),\n        timeHourS: new Date().getHours(),\n        timeMinS: new Date().getMinutes(),\n        timeSecS: new Date().getSeconds(),\n        status: 'inProgress',\n      })\n        .then(() => {\n          setPedidos([])\n          setTotal(0)\n          setClient('')\n          setTable('')\n        })\n    }\n    else if (!pedidos.length) {\n      alert('Selecione um produto para gerar o pedido')\n    }\n    else if (!table) {\n      alert('Insira o número da mesa')\n    }\n    else if (!client) {\n      alert('Insira o nome do cliente')\n    }\n  }\n\n  const items = (addItem) => {\n      if (!pedidos.includes(addItem)) {\n          addItem.count = 1\n          setPedidos([...pedidos, addItem])\n      } else {\n          addItem.count += 1\n          setPedidos([...pedidos])\n      }\n\n      setTotal(total + (addItem.price))\n  }\n\n  const deleteItem = (addItem) => {\n    const index = pedidos.indexOf(addItem)\n    pedidos.splice(index, 1)\n    setPedidos([...pedidos])\n    const updateTotal = total - (addItem.price * addItem.count);\n    setTotal(updateTotal)\n  }\n\n  return (\n    <>\n      <form className=\"form-horizontal col-xs-12 jumbotron\">\n        <legend>Menu</legend>\n        <Breakfast menu={menu} onClick={items}/>\n        <FullDay menu={menu} onClick={items} />\n          <div className=\"col-xs-12\">\n          <legend> Meus Pedidos</legend>\n          <div className=\"input-group \">\n            <span className=\"input-group-addon\"><i className=\"fa fa-user-circle\"></i></span>\n            <Input\n              type='text'\n              id='cliente'\n              placeholder='Nome do cliente'\n              value={client}\n              onChange={(event) => setClient(event.target.value)}\n            />\n          </div><hr />\n          <div className=\"input-group\">\n            <span className=\"input-group-addon\" ><i className=\"fa fa-user-circle\"></i></span>\n            <Input\n              type='number'\n              id='mesa'\n              placeholder='Número da mesa'\n              value={table}\n              onChange={(event) => setTable(event.target.value)}\n            />\n          </div>\n          <section>\n            <div>\n              {pedidos.map(orders => <ResumeItem key={orders.id} name={orders.name} price={orders.price} count={orders.count} onClick={(event) => deleteItem(orders, event)} />)}\n            </div>\n            <p>Total: R${pedidos.reduce((acc, curr) => acc + curr.price * curr.count, 0) + \",00\"} </p>\n            <div>\n            <Button className='btn btn-primary' onClick={sendRequest}> Enviar Pedido </Button>\n            </div>\n          </section>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Atendimento;","import React, { useState, useEffect } from 'react';\nimport '../css/bootstrap.css'\nimport db from '../utils/firebaseconfig';\n\n\nfunction Cozinha(props) {\n\n    const [pedidos, setPedidos] = useState([]);\n\n    useEffect(() => {\n        db.collection('pedidos').orderBy('timeSend')\n            .onSnapshot((snap) => {\n                const list = snap.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data()\n                }))\n\n                setPedidos(list)\n            })\n    }, []);\n\n\n    const confirmOrders = (item) => {\n\n        db.collection('pedidos').doc(item.id).update({\n            status: 'deliver',\n            timeDone: new Date(),\n            timeDateD: new Date().getDate(),\n            timeHourD: new Date().getHours(),\n            timeMinD: new Date().getMinutes(),\n            timeSecD: new Date().getSeconds(),\n        })\n    }\n\n    return (\n        <>\n            <form className=\"form-group col-xs-12 jumbotron\">\n                <fieldset className=\"form-group\">\n                    <div className=\"col-xs-12\">\n                        <legend>Pedidos</legend>\n                        {pedidos.map((item, index) =>\n                            <div key={index}>\n\n                                {item.status === 'inProgress' ?\n                                    <div className=\"col-xs-12\">\n                                        <p>{' Mesa: ' + item.table}</p>\n                                        {item.pedidos.map((products, index) =>\n                                            <div key={index} className=\"col-xs-12\">\n\n                                                <fieldset clasName=\"form-group\">\n                                                    <div className=\"form-check col-xs-12\">\n                                                        <label className=\"form-check-label\"></label>\n                                                    </div>\n                                                    <div class=\"form-check disabled\">\n                                                        <label class=\"form-check-label\">\n                                                            <input type=\"checkbox\"\n                                                                class=\"form-check-input\"\n                                                                name=\"optionsRadios\"\n                                                                id=\"optionsRadios3\"\n                                                                value=\"option3\"\n                                                                disabled=\"\"\n                                                            />\n                                                        </label>\n                                                    </div>\n                                                </fieldset>\n\n                                                {products.type === 'hamburger' ?\n                                                    <div className=\"col-xs-12\">\n                                                        <p>{'Quantidade: ' + products.count} - {products.name}</p>\n                                                        <div className=\"col-xs-12\">\n                                                            <p>{'Hambúrguer: ' + products.meetSelect}</p>\n                                                        </div>\n                                                    </div>\n                                                    :\n                                                    <p>{'Quantidade: ' + products.count} - {products.name}</p>\n                                                }\n\n                                            </div>\n\n                                        )}\n                                        <button className=\"btn-primary\" onClick={() => confirmOrders(item)}> Confirmar </button>\n\n                                    </div>\n                                    : null}\n                            </div>\n                        )}\n                    </div>\n                </fieldset>\n\n            </form>\n        </>\n    );\n}\n\n\nexport default Cozinha;\n\n","import React from 'react';\nimport '../css/bootstrap.css';\nimport '../css/font-awesome.css';\n\nconst Nav = () => {\n    return (\n\n        <nav className=\"nav-navbar navbar-default col-xs-12\">\n            <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                    <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"><span className=\"sr-only\">Toggle navigation</span>\n                        <span className=\"sr-only\">Toggle navigation</span>\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                    </button>\n                    <ul className=\"nav nav-pills\">\n                    <a className=\"navbar-brand\" href=\"/atendimento\"> Atendimento </a>\n                    <a className=\"navbar-brand\" href=\"/cozinha\"> Cozinha </a>\n                    <a className=\"navbar-brand\" href=\"/delivery\"> Delivery </a>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n\n    );\n}\n\nexport default Nav;","import React, { useState, useEffect } from 'react';\nimport '../css/bootstrap.css'\nimport db from '../utils/firebaseconfig';\nimport Button from '../components/Button';\n\n\nfunction Delivery() {\n\n    const [delivery, setDelivery] = useState([]);\n  \n    useEffect(() => {\n      db.collection('pedidos').orderBy('timeDone')\n        .onSnapshot((snap) => {\n          const list = snap.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data()\n          }))\n          setDelivery(list)\n        })\n    }, [])\n  \n    const finish = (item) => {\n      db.collection('pedidos').doc(item.id).update({\n          status: 'conclud',\n          timeConclud: new Date(),\n          timeHourC: new Date().getHours(),\n          timeMinC: new Date().getMinutes(),\n          timeSecC: new Date().getSeconds(),\n        })\n    }\n  \n    const time = (item) => {\n      let seconds;\n      let rest;\n  \n      if (((item.timeDateS)) === ((item.timeDateD))) {\n        seconds = (((item.timeHourD * 3600) + (item.timeMinD * 60) + (item.timeSecD)) - ((item.timeHourS * 3600) + (item.timeMinS * 60) + (item.timeSecS)))\n      }\n      else {\n        seconds = (((item.timeHourD * 3600) + (item.timeMinD * 60) + (item.timeSecD) + 86400) - ((item.timeHourS * 3600) + (item.timeMinS * 60) + (item.timeSecS)))\n      }\n  \n      let horas = Math.floor(seconds / (60 * 60));\n      rest = seconds % (60 * 60);\n  \n      let minutos = Math.floor(rest / 60);\n      rest %= 60;\n  \n      let segundos = Math.ceil(rest);\n  \n      let hora = [horas + ' h, ', minutos + ' m e ', segundos + ' s.']\n      return hora;\n    }\n  \n  \n    return (\n      <div>\n        <h1 >Pedidos Prontos </h1>\n        {delivery.map((item, index) =>\n          <div key={index}>\n  \n            {item.status === 'deliver' ?\n              <div>\n                <p>{'Mesa ' + item.table} - {item.client}</p>\n                <div>\n                  <div>\n  \n                    {item.resumo.map((itens, index) =>\n                      <div key={index} >\n                        {itens.type === 'hamburger' ?\n                          <div>\n                            <p>Quantidade:{itens.count} - {itens.name}{' /' + itens.meetSelect}</p>\n                          </div>\n                          :\n                          <p>Quantidade:{itens.count} - {itens.name}</p>\n                        }\n                      </div>\n                    )}\n  \n                  </div>\n                  <Button onClick={() => finish(item)}> Entregue </Button>\n                </div>\n                <div> O seu pedido ficou pronto em: {time(item)}</div>\n              </div>\n              : null}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n    export default Delivery;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Atendimento from './pages/Atendimento';\nimport Cozinha from './pages/Cozinha';\nimport Nav from './components/Nav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Delivery from './pages/Delivery';\n\n\n\nfunction App() {\n  document.title = `Burger Queen`\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route path=\"/cozinha\" component={Cozinha} />\n          <Route path=\"/atendimento\" component={Atendimento} />\n          <Route path=\"/delivery\" component={Delivery} />\n        </Switch>\n      </div>\n    </Router>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/bootstrap.css';\nimport './css/font-awesome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}